public class SimplePrimeStreaming {
  
    public static String solve(int a, int b) {
      
        String result  = "";
        int position = 0;
       
        int p = 1;
      
        while (position<a+b){
          
            p = (p<=2)? p+1: p+2;
            while (!Prime.isPrime(p)){    //if p not prime look for next;
                p+=2;
            } 
        
            String stringP =  String.valueOf(p);
            int    lenP    =  stringP.length(); 

            if (a<position+lenP){
                if (a  > position){
                    result += stringP.substring(a-position);  
                }
                else {
                    result += stringP;      
                }
            } 
            position+=lenP;
        }
      
        return result.substring(0,b);      
    }
 }     
//************************************Prime************************
  
class Prime {
  
  public static List<Integer> primes = new ArrayList<>(Arrays.asList(2,3,5,7,11,13,17,19,23,29,31));
  
// ----------------------isPrime---------------------
  public static boolean isPrime(int num) {
    
    if (num <=36) 
        {return (primes.contains(num));}
    
        int i = 0;
        int p = 2;
        int m30=0;
    
        while (p*p<= num){
           if (num%p==0) {return false;}

           if (i<10) {i++;
           }else{
             i-=7;
             m30+=30;
           }            
           p = primes.get(i) + m30;
           }  
    
        return true;     
    }        
 }  
