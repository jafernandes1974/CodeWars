import java.math.BigInteger;

public class Kata {
  public static int lastDigit(BigInteger n1, BigInteger n2) { 
    
    // 0^0 = 1; O^n=0                   // 5^n = 5
    // 1^n = 1                          // 6^n = 6 
    // 2 4 8 6 2  -> cycle of 4         // 7 9 3 1 7  -> cycle of 4
    // 3 9 7 1 3  -> cycle of 4         // 8 4 2 6 8  -> cycle of 4         
    // 4 6 4 6 4  -> cycle of 2         // 9 1 9 1 9  -> cycle of 2 
    
     if (n2.equals(BigInteger.ZERO)) return 1;
    
     int [][]    lastDigits  = {{0,0,0,0},{1,1,1,1},{6,2,4,8},{1,3,9,7},{6,4,6,4},
                                {5,5,5,5},{6,6,6,6},{1,7,9,3},{6,8,4,2},{1,9,1,9}};

    int num1 = (n1.mod(BigInteger.TEN)).intValue();
    int num2 = (n2.mod(new BigInteger("4"))).intValue();
    
    return lastDigits[num1][num2];
  }      
}
2 days agoR
